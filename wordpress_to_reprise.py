#!../ve/bin/python
from __future__ import with_statement, print_function, unicode_literals

import os
import re
import sys
import time
import shutil
import codecs
import string
import datetime
import feedparser
from optparse import OptionParser

WP_TAG = "/rss/channel/item"
ROOT = os.path.abspath(os.path.dirname(__file__))
try:
    EXPORT_DIR = os.mkdir(os.path.join(ROOT, 'entries'))
except OSError:
    EXPORT_DIR = os.path.join(ROOT, 'entries')
    shutil.rmtree(EXPORT_DIR)
    os.mkdir(EXPORT_DIR)

LETTER_SET = frozenset(string.ascii_letters + string.digits + '_-.')
def to_title(value):
    """Converts a string into titlecase."""
    t = re.sub("\s+", ".", value)
    t = filter(LETTER_SET.__contains__, t)
    t = re.sub("([a-z])'\W([A-Z])", lambda m: m.group(0).lower(), t.title())
    return re.sub("\d([A-Z])", lambda m: m.group(0).lower(), t)

def to_tags(category):
    """Converts WP category to tag"""
    cat = category.split()
    if (len(cat) > 1):
        category = '-'.join(cat)
    return category

def to_python_datetime(wp_time):
    """Wordpress export dates to python datetime"""
    struct_time = time.strptime(wp_time, "%Y-%m-%d %H:%M:%S")
    seconds = time.mktime(struct_time)
    return datetime.datetime.fromtimestamp(seconds)

def entry_filename(date, title):
    """Desired fileformat for reprise blog"""
    t = to_title(title)
    return "{0}.{1}.{2}.{3}".format(date.year, date.month, date.day, t)

def extract(xmlfile):
    file = feedparser.parse(xmlfile)
    print("Found {0} blog posts".format(len(file.entries)))
    
    for entry in file.entries:
        date = to_python_datetime(entry.wp_post_date)
        filename = entry_filename(date, unicode(entry.title))
        tags = to_tags(entry.category)
        
        entry_uni = unicode(entry.content[0].value)
        out_str = "Tags: {0}\n\n{1}".format(tags, entry_uni)
        with codecs.open(os.path.join(EXPORT_DIR, filename), 'w', 'utf-8') as fp:
            fp.write(out_str)

def handle_args():
    description = "Split up my wordpress export XML-file and create entries" \
                  "for reprise-blog."
    usage = "Usage:  %prog <INFILE>"
    epilog = "Nothing."
    version = "%prog version 0.1"

    parser = OptionParser(usage=usage, description=description, epilog=epilog,
                          version=version)
    parser.add_option('-i',
        dest='infile',
        metavar='<FILE>',
        help='The XML file generated by WordPress'
    )

    (opts, args) = parser.parse_args()
    if not opts.infile:
        parser.print_help()
        sys.exit(-1)

    return opts

if __name__ == "__main__":
    opts = handle_args()
    extract(opts.infile)
